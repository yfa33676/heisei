インターネットというところからコンピュータ技術まで広げて、ハッカーについていくつか話しました。ということで、今回はハッカーについていくつか。読むのはスティーブン・レヴィ『ハッカーズ』です。

ハッカーは1950年代のMITのTMRC（テック鉄道模型クラブ）から始まります。

「「ハック」という言葉は、長い間MITの学生が年中仕掛ける凝ったいたずら、たとえば、キャンパスを見下ろすドームをアルミ箔で包んでしまうといった類のいたずらのことを表していた。けれども、TMRCのメンバーがこの言葉を使うときには心からの尊敬が込められている。リレーがうまくいったときなどに「まったくのハックだ」という者もあるだろう。しかし、ハックだと認められるためには、革新的で、かっこよく、高度なテクニックを駆使した妙技でなければ役不足なのだ。多少謙遜気味に、（斧で丸太をハックする〔叩き切る〕ように）「システムをハックしてぶち壊しちゃったよ」というときでさえ、その「ぶち壊し方」は芸術的でなければならない。S&P〔信号と動力〕グループ、システムの改善に最も貢献した者たちは、誇らしげに自分のことを「ハッカー」と呼んだのである」

ハッカーという言葉はMITの鉄道模型クラブから始まりました。ハックとはこういう意味である、と書くのは難しいですが、ここで引いた一節からなんとなく読み取れるとは思います。犯罪と結びつくような悪い意味もまだないし、といっても、いたずらと結びついているので、学生として褒められるような良い意味でもなかったわけです。MITの26号館2階のラジオ・ラボラトリー・オブ・エレクトロニクスにIBM704を内蔵したTX-0という計算機センターがありました。ハッカーたちはここに集まり、ハックをしていたわけです。そして、ここで言わばハッカー倫理と呼べるようなものが生まれます。たとえば『ハッカーズ』には、「コンピュータへのアクセス、加えて、何であれ、世界の機能の仕方について教えてくれるものへのアクセスは無制限かつ全面的でなければならない」「情報はすべて自由に利用できなければならない」「権威を信用するな−−反中央集権を進めよう」といったハッカーの考えが書かれています。

ハッカーと対立するのは、ビジネスだと思います。たとえば、ハッカーたちはIBMを嫌います。

「会社であれ、政府であれ、大学であれ、官僚主義はシステムを駄目にする。〔…〕官僚主義の典型は、インターナショナル・ビジネス・マシンズ、IBMという名の巨大会社に見ることができる。IBMコンピュータが、バッチ処理された「不格好な巨人」ばかりだったのはなぜか。真空管技術のためだというのは理由のほんの一端にすぎない。真の理由は、IBMが、ハックしたいという衝動など理解できない、融通の利かぬ、馬鹿でかい会社だったからである。〔…〕IBMは技術的に最先端なマシンを作ろうとはせず、検証済みのコンセプトと、細心かつ積極的なマーケティングに頼ってきたのだ。コンピュータ業界でのIBM支配が確立するにつれて、IBMは秘密主義で独善的な自己自身にふさわしい一大帝国となった。〔…〕IBM人種には、誰も命令する者もいない反中央集権的なシステムが明らかに優れていることが、どうしてもわからないのだ。そういうシステムの下では、人はただ自分の好奇心に従えばいい。そして、途中でシステムの欠陥を発見したり、大がかりな手術を始めることだってできる。許可願いなんて必要ない。やってみたいという気持ちがありさえすれば」

ハッカーたちはIBMのような官僚主義はシステムを駄目にすると考えていました。ハッカーたちはシステムの欠陥を見つければ自らの好奇心に従ってハックして、より優れたシステムにすることを望みますが、官僚主義はそれを許さないわけです。ハックするために必要な情報を秘密にするかもしれないし、情報を利用するためには許可を願わなくてはならなかったりするからですね。こう言ってよければ、ハッカー倫理とは、社会主義（あるいは共産主義）がアメリカで生まれたものだとも思います。たとえば『ハッカーズ』によれば「実社会ではそういう考え方は甘いのだが、ハッカーたちは、所有権など存在しないものと考えていたのだ」とあります。というのも、所有権を守るためにいくら防壁が作られても、ハッカーたちはいくらでも侵入することができたし、ハッカー倫理からしても所有権を守ることは情報の自由な利用を妨げることに結びつくので、あまり良いことではないわけです。もしかしたら、ハッカーとビジネスの対立は、社会主義（共産主義）と資本主義（自由主義）の対立と重ねられるのかもしれません。

＊

インターネットの技術についてさかのぼると、アメリカ国防総省のARPA（高度研究計画局）の通信ネットワークであるARPAネットまで戻ることができます。そして、ARPAネットもまたハッカー倫理に従うものでした。

「スタンフォード・ラボやその他のラボは、カーネギーメロン大のような大学に所属するものであれ、スタンフォード・リサーチ・インスティテュートのようなリサーチ・センターに所属するものであれ、ARPAが通信ネットワークを使って、各ラボのコンピュータ・システムを結びつけたおかげで、お互いにぐっと近い存在となった。この「ARPAネット」は、その理想の中に、システムは中央集権的ではなく、探索を奨励し、情報の自由な流れを促進するものでなくてはならないという信念が含まれている点で、ハッカー倫理に大きな影響を受けていた。ARPAネットのどの「ノード」にあるコンピュータからでも、遠く離れたコンピュータ・システムのターミナルの前に座っているかのように作業をすることができる。全国のハッカーたちが、テック・スクエアのITSシステムに取り組むことができ、ITSに暗黙のうちに込められていたハッカーの価値観は広まっていた」

もしインターネットがビジネスに逆らいハッカー倫理に厳密に従うものとして広がっていたなら、すべてのコンピュータがどのコンピュータからでも操作することができたと思います。少なくとも、ARPAネットはそういうものだったわけですから。

＊

ハッカーがビジネスに巻き込まれたのは、ビル・ゲイツからだと思います。というわけで、そのあたりについても読みましょう。

まず、エド・ロバーツについて。ロバーツはMITSという会社を作り、1974年に、次のようなものを作ろうと考えていました。

「彼はインテル社の新しいマイクロプロセッサ・チップについての知識から、それを使ってコンピュータを作れるとわかっていた。空軍時代に初めてコンピュータに触れて依頼、彼はそのパワーに畏敬の念を持ちながら、コンピュータにアクセスするためには避けて通れない、複雑な手続きにはうんざりさせられていた。〔…〕ロバーツは、この新しいマイクロプロセッサ技術を使って、コンピュータを人民のもとへ差し出すつもりだった。しかも、誰でも買わずにはいられないほどの安い値段で。〔…〕コンピュータ界の大手企業、なかでもIBMは、そういうコンセプト自体を馬鹿馬鹿しいと考えていた。どこの気違いが、小さなコンピュータを欲しがるというんだ、というわけである。チップを作った当のインテル社でさえ、その用途は、ミニコンピュータよりも、交通信号制御装置の部品に使うほうがふさわしいだろうと考えていた」

こうしてインテルの8080チップをもとに作られたのがオルテア8080というコンピュータ・キットです。これが個人用のコンピュータの始まりなわけですね。1975年に販売が始まり、多くのひとが購入しました。

当時、大学生だったビル・ゲイツとその友人ポール・アレンはオルテア8080を見て、次のようなことを始めました。

「〔…〕二人は、新しいコンピュータ用にBASICのようなコンピュータ言語のインタープリタを作れば、儲かるだろうと気がついていた。技術的には二人の心を動かさなかったオルテアは、別の面では二人を興奮させた。マイクロコンピュータがやがて大流行となることは間違いなかった。マイコン用BASICを書けば、流行の波に一枚加わることができるだろう。〔…〕そこで彼らは、4Kメモリに収まるようなものを書く仕事に取りかかった」

二人は4Kメモリでも耐えられる8080チップ上で実行できるBASICインタプリタを作りました。二人は作成した紙テープを持って、ロバーツの前でオルテアでBASICが実行できることを示しました。そして、アレンはMITSの社員として雇われて、ゲイツは契約というかたちでMITSで働くようになり、オルテア用BASICはMITSの商品として売られるようになりました。

「ビル・ゲイツもエド・ロバーツも、ソフトウェアはおそれおおくて金で買うことなど考えられない、ただ次々と人々の手に渡してゆくべき神聖なものであるなどとは考えていなかった。ソフトウェアはハードウェアと同じく、労働の結晶である。したがって、オルテア用BASICはほかの商品と同様に、MITS社のカタログに載せられた」

しかし、この考えはハッカー倫理に逆らうものです。ハッカー倫理に従うダン・ソコルは次のように動きました。

「ソコルはMITS社のつけたBASICの値段は高すぎると思っていた。MITS社はあこぎだと思った。ソコルは、ゲイツとアレンが書いたインタープリタは、政府の補助金を受けている機関の大規模なコンピュータ・システムで書いたのだという噂を耳にしていたので、それならプログラムは納税者みんなのものだと思った。また、すでに大勢がMITS社に代金を払い込んでいたことをソコルは知っていた。彼らが初期のコピーを手に入れたとしても、MITS社は財政的に被害を被ることはないはずである。しかも、なによりも、テープをコピーすることは、正しいことのように感じられたのだった。システムを探索し、改善し、作るための道具とハッカーの間に、所有権という壁が立ちはだかっていいはずがない」

ということで、ソコルはオルテア用BASICの紙テープのコピーを大量に用意して無償で配布しました。そのため、多くのひとが、オルテア用BASICは買わずにコピーを手に入れるようになりました。このことにビル・ゲイツは怒り、いくつかのハッカー・コミュニティの会報に向けて「ホビーストたちへの公開状」という手紙を送ります。

「これはどういうわけだ？　ほとんどのホビーストたちは気づいているに違いないが、君たちの多くはソフトウェアを盗んでいる。ハードウェアには金を払わなければならないが、ソフトウェアは共有すべきものだ、というのが君たちの考えだ。ソフトウェアを開発したものへの報酬のことなど、誰一人気づかう者はいないな。〔…〕プロの仕事をただでやってくれる人間がいるわけがない。三年間の労力を費やしてプログラミングし、あらゆるバグを見つけ出し、作品に詳しい解説を付け、そしてただに人に配るホビーストがいるだろうか？」

ビル・ゲイツはハッカー倫理をこのように告発したわけです。多くのハッカーはゲイツの告発を受け入れませんでしたが、いままでになかった考え方がハッカーたちに生まれました。

「MITハッカーたちがソフトウェアを書き、みんなが取り組めるように、それを引き出しに残していったころ、彼らは印税という誘惑を知らなかった。〔…〕やがて、（オルテアだけでなくほかのコンピュータも含めて）使われるコンピュータの台数が増えてくると、ハッカーたちが海賊行為を自分たちの本分だと考えなければ、優れたソフトウェアは金のなる木のようなものになった。ソフトウェアの作者が、自分の作品に対して何がしかの報酬を受けることに反対する者はいなかったが、ハッカーたちは、コンピュータ・プログラムはみんなのものだという考えを捨てる気にもなれなかった」

＊

リチャード・ストールマンについても書いておきましょう。ストールマンは1971年にMITのAIラボのシステム・プログラマーとして務め始めました。1970年代というと、ビル・ゲイツのオルテア用BASICに起きたことのように、ハッカー倫理にビジネスの考えが生まれ始めたころです。ストールマンはハッカー倫理の変化と戦ったひとりです。たとえば、次のようなことがありました。

「しかし、70年代の進歩につれて、リチャード・ストールマンは自分の愛するなわばりに変化が起こるのを目にし始めた。最初の侵略は、公認ユーザーにパスワードが割り当てられ、非公認ユーザーはシステムから締め出されるという形で行われた。真のハッカーらしく、ストールマンはパスワードを軽蔑し、自分が賃金を得て保守を受け持っているコンピュータがパスワードを使っていないという事実を誇りに思っていた。しかし、AIラボとは別の人間によって運営されている。MITのコンピュータ・サイエンス学科はマシンのセキュリティ（機密保護）を導入することを決定したのだった。ストールマンは、パスワード廃止のキャンペーンを張った。彼はみんなに、「空白ストリング」パスワード、つまり言葉の代わりに、「リターン」を使うように勧めたのである。そうすれば、マシンがパスワードを要求したときには、リターン・キーを押せば登録されることになるのだ。ストールマンはまた、コンピュータの登録コードを壊しみんなのパスワードを保持している保護されたファイルに到達することができた。彼は、ユーザーはがパスワードを入力し、ターミナルがシステムにつながると、スクリーンに現れるメッセージをみんなに送り始めた。「ぼくは、君が「〇〇」というパスワードを選んだことを知っています。それよりも、「リターン」というパスワードに変更してはどうですか。その方が、ずっとタイプしやすいし、パスワードなどあってはならないという大原則にも、一応耐えうる選択だと思います」」

真のハッカーはパスワードという考えさえ受け入れません。すべてのコンピュータは誰でも利用できるべきだからです。にもかかわらず、ストールマンが務めていたハッカーの始まりの場でもあるMITがパスワードの導入することを決めたわけです。

また、ストールマンはビル・ゲイツのようにソフトウェアのコピーを許さないという考えも受け入れられませんでした。

「プログラムがスクリーンに現れると、著作権〔copyright〕の表示も出てきたのである。著作権の表示！　すべての情報が妨げられることなく流通すべきという信念を、変わらずに抱いていたストールマンにとって、それは冒涜的な行為だった。「ソフトウェアは個人の所有物にすべきではないと、ぼくは信じている」と、そういう時代が去って久しい1983年に、彼はいった。「ソフトウェアの所有は人類全体にとって害になるからだ。それを許せば、プログラムの存在から、最大限の利益を引き出すことができなくなってしまう」リチャード・ストールマンの目から見れば、彼の愛する、理想主義的なコミュニティの生き残っていた部分に致命的な打撃を与えたのは、この種のコマーシャリズムだった。それは、悪が具現化された状態だった」

ソフトウェアの所有権を守るというのは、コピーをされないことでした。このことはソフトウェアが商品であることと結びついています（資本主義の条件として所有権があるように）。つまり、無償で手に入れられるものは商品として成り立たないわけですね。しかし、ハッカー倫理に従えば、ソフトウェアのコピーを許さないという考えは受け入れられません。とはいえ、1970代後半になると、そのような考えはハッカー・コミュニティからも少なくなり、ソフトウェアを所有するという考えがハッカーたちに上書かれるようになったわけです。

＊

リチャード・ストールマンは1984年にMITを離れました。MITにハッカーの居場所がなくなったからです。ストールマンはMITを離れて、GNUというフリーオペレーティングシステムを開発するプロジェクトを始めました。というわけで、付録として、GNUプロジェクトについて少しだけ。読むのは、ストールマンの『フリーソフトウェア、フリーソサイエティ』に収められている「GNUプロジェクト」です。ストールマンによれば、GNUプロジェクトはハッカーコミュニティを再び作るために始められたものでした。

「フリーオペレーティングシステムがあれば、協力し合うハッカーたちのコミュニティを再び築くことができるだろう。〔…〕私は、Unix互換システムを作ることにした。そうすれば、移植性を確保できるし、Unixユーザーが簡単に移ってこれる。GNUという名前は、ハッカーの伝統に従い、"GNU's Not Unix"という再帰的な（入れ子上の）頭文字として選ばれたものである。1990年までに、GNUシステムはほとんど完成していた。主要コンポーネントで欠けていたものは、カーネルだけだった。私たちは、Machの上で動作するサーバプロセスのコレクションという形でカーネルを実装することにしていた。Machは、カーネギーメロン大学、ついでユタ大学で開発されたマイクロカーネルである。GNU Hurdは、Machの上で動作するサーバコレクション（「GNUの群れ」）であり、Unixカーネルのさまざまな仕事を行う。〔…〕GNU Hurdは、まだ稼働できる状態にはなっていないが、幸いにも別のカーネルが現れた。リーナス・トーヴァルズは、1991年にUnix互換カーネルを開発し、Linuxと名付けた。そして、1992年頃、Linuxとまだ完全には完成していないGNUシステムを結合することによって、完全なフリーオペレーティングシステムが完成した（もちろん、両者の結合は、それ自体大きな仕事だった）。現在、実際にGNUシステムの1バージョンを実行できるのは、Linuxのおかげである。私達は、GNUシステムとカーネルとしてのLinuxの結合という構成を表現するために、このバージョンのシステムをGNU/Linuxと呼んでいる」

ストールマンのフリーソフトウェアという思想のもとで始められたGNUプロジェクトによりUnix互換のオペレーティングシステムが作られました。同じくして、リーナス・トーヴァルズを中心としたコミュニティでLinuxという名のUnixカーネルが作られます。GNUオペレーティングシステムのカーネルではないシェルのところとLinuxカーネルを組み合わせて、作られたのがLinux（ストールマンに従えばGNU/Linux）なわけです。

それでは、Linuxカーネルはどのように作られたのか。このあたりはエリック・レイモンド『伽藍とバザール』が詳しいです。というわけで、これも少しだけ。

「Linuxは、僕がわかっているつもりでいたものを、大幅にひっくりかえしてくれた。それまでだって、小さなツールや高速プロトタイプ作成、進化的プログラミングといったUnixの福音は説き続けてはいた。でももっと上のレベルでは何かどうしようもない複雑な部分がでてきて、もっと中央集権的で、アプリオリなアプローチが必要になってくるものだとも思ってた。一番大事なソフト（OSや、Emacsみたいな本当に大規模なツール）は伽藍のように組み立てられなきゃダメで、一人のウィザードか魔術師の小集団が、まったく孤立して慎重に組み立てあげるべきもので、完成するまでベータ版も出さないようでなくちゃダメだと思っていた。だからリーナス・トーヴァルズの開発スタイル――はやめにしょっちゅうリリース、任せられるものはなんでも任して、乱交まがいになんでもオープンにする――には まったく驚かされた。静かで荘厳な伽藍づくりなんかない――Linuxコミュニティはむしろ、いろんな作業やアプローチが渦を巻く、でかい騒がしいバザールに似ているみたいだった（これをまさに象徴しているのがLinuxのアーカイブサイトで、ここはどこのだれからでもソフトを受け入れてしまう）。そしてそこから一貫した安定なシステムが出てくるなんて、奇跡がいくつも続かなければ不可能に思えた。このバザール方式がどういうわけかまともに機能するらしく、しかもみごとな結果を生むなんて、衝撃以外の何物でもなかった」

レイモンドはソフトウェアの開発について、伽藍とバザールという対比のもとで書いています。伽藍の組み立て方というのは、「一人のウィザードか魔術師の小集団が、まったく孤立して慎重に組み立てあげる」というもので、レイモンドは大規模なものについてはこの方法しかないと考えていました。しかし、にもかかわらず、Linuxというオペレーティングシステムは伽藍の組み立て方ではなく、言わばバザールだったわけです。「はやめにしょっちゅうリリース、任せられるものはなんでも任して、乱交まがいになんでもオープンにする」。

バザールのような方法でどうして大規模なシステムが出来上がるのか、レイモンドはロシアの無政府主義者クロポトキン（を引用するワインバーグ）を引用しながら、次のように答えています。

「この「多くの重なり合う意志による真面目な努力」は、まさにLinuxのようなプロジェクトには必須――そして「命令という原理」は、ぼくたちがインターネットと呼ぶ無政府主義者天国のボランティアたちに対しては、実質的に適用不可能だ。効果的に活動して競争するには、共同プロジェクトを仕切りたいハッカーは、クロポトキンが「理解の原理」で漠然と示唆しているモードを使い、 有益なコミュニティをリクルートしてやる気を起こさせる方法を学ばなくてはならない。〔…〕Linuxの世界はいろんな意味で、自由市場や生態系のような動きを見せる。自己中心的なエージェントがそれぞれ効用を最大化しようとして、その過程で自己調整的な 自律的秩序を生み出し、それはどんな中央集権計画の何倍も複雑で効率が高くなる。だからこここそが「理解の原理」を探すべき場所だ」

レイモンドによれば、「理解の原理」があれば「命令の原理」がなくても、コミュニティは自由市場や生態系のように自律的秩序を生み出し効率を最大化できる、だからLinuxのバザールの方法が成り立った、というわけです。「理解の原理」を妨げるものがあると、バザールの方法は成り立ちません。ハッカーに言わせれば、ソフトウェアのコピーを許さないことは、「理解の原理」を妨げることになるでしょう。
